Only in CheckoutAssistant/: CheckoutAssistant.cbp
Only in CheckoutAssistant/: CheckoutAssistant.depend
Only in CheckoutAssistant/: CheckoutAssistant.layout
Only in Codechef_PlusEq/: Codechef_PlusEq.cbp
Only in Codechef_PlusEq/: Codechef_PlusEq.depend
Only in Codechef_PlusEq/: Codechef_PlusEq.layout
Common subdirectories: Codechef_PlusEq/bin and CheckoutAssistant/bin
diff Codechef_PlusEq/main.cpp CheckoutAssistant/main.cpp
3,6c3,11
< 15112 28
< 120012 33
< 123 123
< 15489001 10549
---
> 2 10
> 0 20
> 1 5
> 1 3
> 
> 3
> 0 1
> 0 10
> 0 100
14,23c19,26
< const int maxS = 22;
< long long int temp, n, sLen;
< bool isFound = false;
< string s;
< vector<string> Result;
< int toInt(string s){
<     long long unsigned int i = 0, sign = 1;
<     if(s[0] == '-'){
<         sign = -1;
<         i++;
---
> const long long int maxLong = 1e18;
> const int maxN = 2005;
> int n, c[maxN], t[maxN];
> long long int optimized[maxN][maxN];
> 
> long long int backtrack(int items, int currTime){
>     if(currTime >= n){
>         return 0;
25,27c28,29
<     long long unsigned int ans = 0;
<     for(;i < s.size(); i++){
<         ans = ans*10 + s[i] - '0';
---
>     if(items > n){
>         return maxLong;
29c31,36
<     return sign * ans;
---
>     if(optimized[items][currTime] >= 0){
>         return optimized[items][currTime];
>     }
>     optimized[items][currTime] = min(backtrack(items+1, currTime), c[items] + backtrack(items+1, currTime+t[items]+1));
>     return optimized[items][currTime];
> 
33,43c40,43
< void backtracking(int index){
<     if(index == sLen){
<         if(temp == n){
<             for(long long unsigned int i = 0; i<Result.size();++i){
<                 cout<<Result[i];
<                 if(i != Result.size()-1){
<                     cout<<"+";
<                 }
<             }
<             isFound = true;
<             cout<<"\n";
---
> void solve(){
>     for(int i = 0;i<maxN;++i){
>         for(int j = 0;j<maxN;++j){
>             optimized[i][j] = -1;
45d44
<         return;
47,56c46,48
<     for(int u = index; u < sLen;++u){
<         string subStr = s.substr(index, u-index+1);
<         Result.push_back(subStr);
<         temp+=toInt(subStr);
<         backtracking(u+1);
<         temp-=toInt(subStr);
<         Result.pop_back();
<         if(isFound){
<             break;
<         }
---
>     cin>>n;
>     for(int i = 1; i<=n;++i){
>         cin >> t[i] >> c[i];
58,65c50
< 
< }
< void solve(){
<     isFound = false;
<     Result.clear();
<     cin >> s  >> n;
<     sLen = s.size();
<     backtracking(0);
---
>     cout<<backtrack(1,0)<<endl;
73,78c58
<     cout.tie(nullptr);
<     int t; cin>>t;
<     while(t--){
<         solve();
< 
<     }
---
>     solve();
Common subdirectories: Codechef_PlusEq/obj and CheckoutAssistant/obj
